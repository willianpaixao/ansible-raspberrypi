---
# file: roles/prometheus/tasks/node-exporter.yml

- name: "[{{ ansible_architecture }}] Download and extract node-exporter tarball"
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
    dest: /tmp
    remote_src: yes
    creates: '/usr/local/bin/node_exporter'
  when: ansible_architecture == 'x86_64'

- name: "[{{ ansible_architecture }}] Download and extract node-exporter tarball"
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-arm64.tar.gz
    dest: /tmp
    remote_src: yes
    creates: '/tmp/node_exporter-{{ node_exporter_version }}.linux-arm64.tar.gz'
  when: ansible_architecture == 'aarch64'

- name: "[{{ ansible_architecture }}] Download and extract node-exporter tarball"
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-armv6.tar.gz
    dest: /tmp
    remote_src: yes
    creates: '/tmp/node_exporter-{{ node_exporter_version }}.linux-armv6.tar.gz'
  when: ansible_architecture == 'armv7l'

- name: "[{{ ansible_architecture }}] Move node-exporter binary to PATH"
  ansible.builtin.copy:
    src: '/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter'
    dest: '/usr/local/bin/node_exporter'
    mode: 0755
    remote_src: yes
  when: ansible_architecture == 'x86_64'

- name: Move node-exporter binary to PATH
  ansible.builtin.copy:
    src: '/tmp/node_exporter-{{ node_exporter_version }}.linux-arm64/node_exporter'
    dest: '/usr/local/bin/node_exporter'
    mode: 0755
    remote_src: yes
  when: ansible_architecture == 'aarch64'

- name: Move node-exporter binary to PATH (ARMv6)
  ansible.builtin.copy:
    src: '/tmp/node_exporter-{{ node_exporter_version }}.linux-armv6/node_exporter'
    dest: '/usr/local/bin/node_exporter'
    mode: 0755
    remote_src: yes
  when: ansible_architecture == 'armv7l'

- name: "[{{ ansible_architecture }}] Delete unused files"
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - '/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64'
    - '/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz'
  when: ansible_architecture == 'x86_64'

- name: Delete unused files
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - '/tmp/node_exporter-{{ node_exporter_version }}.linux-arm64'
    - '/tmp/node_exporter-{{ node_exporter_version }}.linux-arm64.tar.gz'
  when: ansible_architecture == 'aarch64'

- name: Delete unused files (ARMv6)
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - '/tmp/node_exporter-{{ node_exporter_version }}.linux-armv6'
    - '/tmp/node_exporter-{{ node_exporter_version }}.linux-armv6.tar.gz'
  when: ansible_architecture == 'armv7l'

- name: Copy systemd file for node-exporter service
  template:
    src: templates/node-exporter.service.j2
    dest: /lib/systemd/system/node-exporter.service
    owner: root
    group: root
    mode: '0644'

- name: Copy node-exporter settings file
  template:
    src: templates/node-exporter.conf.j2
    dest: /etc/default/node-exporter.conf
    owner: root
    group: root
    mode: '0644'

- name: Start node-exporter service
  service:
    name: node-exporter
    state: restarted
    daemon_reload: yes

- name: Enable node-exporter service to start on boot
  service:
    name: node-exporter
    enabled: yes
